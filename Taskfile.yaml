version: '3'

tasks:
  manual:disk:
    desc: Format a disk with Disko, /dev/sda by default.
    summary: Formats a disk using disko with parted as a backend, make sure to select the right disk as it will forcefully wipe it 
    cmds:
      - sudo nix --experimental-features "nix-command flakes" run github:nix-community/disko -- --mode disko {{.DISKO_PATH}} --arg device '"{{.DEVICE}}"' {{.CLI_ARGS}}
    vars:
      DEVICE: /dev/sda
      DISKO_PATH: ./nixos/disko-config.nix
  manual:install:
    desc: Install a NixOS configuration and copy it over to the install disk
    summary: Installs NixOS on a specified disk through flakes and clones the repo over to it
    cmds:
      - sudo mkdir -p /mnt/persist/system /mnt/persist/home
      - sudo mkdir -p {{.CONFIG_FOLDER}}
      - sudo git clone {{.INSTALL_FLAKE}} {{.CONFIG_FOLDER}}
      - sudo nixos-install --root {{.MOUNT}} --flake {{.FLAKE_PATH}}#{{.CONFIGURATION}} {{.CLI_ARGS}}
    vars:
      CONFIG_FOLDER: /mnt/persist/etc/nixos
      INSTALL_FLAKE: https://github.com/nerds-run/antarctica
      FLAKE_PATH: .
      MOUNT: /mnt
      CONFIGURATION: antarctica
  rebuild:local:
    desc: Refresh already installed system with a specified flake
    summary: Rebases the current system configuration over to the new one on runtime (switch!)
    cmds:
      - nixos-rebuild --use-remote-sudo --flake {{.FLAKE_PATH}}#{{.CONFIGURATION}} {{.REBUILD_COMMAND}} {{.CLI_ARGS}}
    vars:
      FLAKE_PATH: .
      CONFIGURATION: antarctica
      REBUILD_COMMAND: switch
  rebuild:remote:
    desc: Refresh already installed system with a specified flake over SSH
    summary: Rebases the SSH'd current system configuration over to the new one on runtime (switch!)
    cmds:
      - nixos-rebuild --use-remote-sudo --target-host {{.TARGET_HOST}} --build-host {{.BUILD_HOST}} --flake {{.FLAKE_PATH}}#{{.CONFIGURATION}} {{.REBUILD_COMMAND}} {{.CLI_ARGS}}
    vars:
      FLAKE_PATH: .
      CONFIGURATION: antarctica
      REBUILD_COMMAND: switch
      TARGET_HOST: antarctica@forgejo.dev.nerds.run
      BUILD_HOST: antarctica@forgejo.dev.nerds.run
  deploy:test:
    desc: Deploy NixOS configuration over SSH to a test vm, should not break anything on the host
    summary: Deploys NixOS configuration through nixos-anywhere/infect on a testing vm
    cmds:
      - nix run github:nix-community/nixos-anywhere -- --flake {{.FLAKE_PATH}}#{{.CONFIGURATION}} --vm-test {{.CLI_ARGS}}
    vars:
      FLAKE_PATH: .
      CONFIGURATION: antarctica
  deploy:remote:
    desc: Deploy a NixOS configuration over to a remote host through SSH, antarctica requires manual intervention after reboot as per README
    summary: Deploy a NixOS configuration to TARGET_HOST
    cmds:
      - nix run github:nix-community/nixos-anywhere -- --flake {{.FLAKE_PATH}}#{{.CONFIGURATION}} root@{{.TARGET_HOST}} {{.CLI_ARGS}}
    vars:
      FLAKE_PATH: .
      CONFIGURATION: antarctica
      TARGET_HOST: undefined
  hydra:setup:    
    desc: Set up NixOS Hydra with an user as the Admin
    summary: Sets up Hydra by SSHing into host, changing to hydra user and creating the user.
    cmds:
      - ssh {{.TARGET_HOST}} -t "su -l hydra -c hydra-create-user {{.USERNAME}} --full-name {{.FULL_NAME}} --email-address {{.EMAIL_ADDRESS}} --password-prompt --role admin {{.CLI_ARGS}}"
    vars:
      TARGET_HOST: ""
      USERNAME: ""
      FULL_NAME: ""
      EMAIL_ADDRESS: ""
